api:
  openai:
    key: ""
  openrouter:
    key: ""
  gemini:
    key: ""

models:
  openai:
    main: "gpt-5-2025-08-07"
    guess: "gpt-5-2025-08-07"
  openrouter:
    main: "openai/gpt-5"
    guess: "openai/gpt-5"
  gemini:
    main: "gemini-2.5-flash"
    guess: "gemini-2.0-flash"

game:
  num_players: 2
  error_sleep_time: 60
  max_turns: 30
  stop_after: 40
  agent_name0: "OpenRouter"
  agent_name1: "OpenAI"
  guess_model_name: "gpt-5-2025-08-07"
  num_guesses: 3

prompts:
  standard_game: |
    You are a competitive game player. Make sure you read the game instructions 
    carefully, and always follow the required format. Reason extensively and deeply, 
    and then return your move. Important: always return a valid move and a valid move 
    only, even if you are uncertain.
  
  guess: |
    Reason very very succinctly about the next move, return {num_guesses} candidates for the next move. IMPORTANT FORMAT: 
    Your response must be a comma-separated list of moves in [UCI_MOVE] format, like: [e2e4], [e2e3], [d2d4] 
    (exact syntax with square brackets and commas between moves!). For example: [e2e4], [d2d4], [g1f3]. 
    Ensure all moves are from the list of valid moves. Even if uncertain, return exactly {num_guesses} candidates. 
    Reason very very quickly, no need to truly think about each of the candidates, just return the most likely candidates and return precisely {num_guesses} valid moves - no more, no less.
  
  retry: |
    Attempt {attempt} failed, please remember that you are acting as {role} in 
    the chess game, and you need to make a valid move from the last valid moves list. 
    Return the move in the format [UCI_MOVE], for example [e2e4].

# Legacy prompts from old code
legacy:
  chess_guess_prompt: |
    Based on these observations and moves given, guess the next move in the format mentioned. 
    Action must always be present in the output and in a legal UCI format chess move like [e2e4]. 
    Do not under any circumstance give a response without an action in legal uci format
  
  react_instruction: |
    Solve a chess playing task with interleaving Thought and Action steps.
    Thought can reason about the current chess board situation, possible strategies, threats, or tactics.
    Action must always be a legal UCI format chess move like [e2e4].
    Always reply in this format:
    Thought: <your reasoning about the position>
    Action: <your chosen UCI move>

    Example:

    Thought: I want to control the center early, so I will push the king's pawn.
    Action: [e2e4]